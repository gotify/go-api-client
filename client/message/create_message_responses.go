// Code generated by go-swagger; DO NOT EDIT.

package message

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gotify/go-api-client/v2/models"
)

// CreateMessageReader is a Reader for the CreateMessage structure.
type CreateMessageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateMessageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateMessageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateMessageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateMessageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateMessageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateMessageOK creates a CreateMessageOK with default headers values
func NewCreateMessageOK() *CreateMessageOK {
	return &CreateMessageOK{}
}

/*CreateMessageOK handles this case with default header values.

Ok
*/
type CreateMessageOK struct {
	Payload *models.MessageExternal
}

func (o *CreateMessageOK) Error() string {
	return fmt.Sprintf("[POST /message][%d] createMessageOK  %+v", 200, o.Payload)
}

func (o *CreateMessageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageExternal)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMessageBadRequest creates a CreateMessageBadRequest with default headers values
func NewCreateMessageBadRequest() *CreateMessageBadRequest {
	return &CreateMessageBadRequest{}
}

/*CreateMessageBadRequest handles this case with default header values.

Bad Request
*/
type CreateMessageBadRequest struct {
	Payload *models.Error
}

func (o *CreateMessageBadRequest) Error() string {
	return fmt.Sprintf("[POST /message][%d] createMessageBadRequest  %+v", 400, o.Payload)
}

func (o *CreateMessageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMessageUnauthorized creates a CreateMessageUnauthorized with default headers values
func NewCreateMessageUnauthorized() *CreateMessageUnauthorized {
	return &CreateMessageUnauthorized{}
}

/*CreateMessageUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateMessageUnauthorized struct {
	Payload *models.Error
}

func (o *CreateMessageUnauthorized) Error() string {
	return fmt.Sprintf("[POST /message][%d] createMessageUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateMessageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMessageForbidden creates a CreateMessageForbidden with default headers values
func NewCreateMessageForbidden() *CreateMessageForbidden {
	return &CreateMessageForbidden{}
}

/*CreateMessageForbidden handles this case with default header values.

Forbidden
*/
type CreateMessageForbidden struct {
	Payload *models.Error
}

func (o *CreateMessageForbidden) Error() string {
	return fmt.Sprintf("[POST /message][%d] createMessageForbidden  %+v", 403, o.Payload)
}

func (o *CreateMessageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
