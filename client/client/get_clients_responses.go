// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gotify/go-api-client/v2/models"
)

// GetClientsReader is a Reader for the GetClients structure.
type GetClientsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClientsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetClientsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetClientsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetClientsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetClientsOK creates a GetClientsOK with default headers values
func NewGetClientsOK() *GetClientsOK {
	return &GetClientsOK{}
}

/*GetClientsOK handles this case with default header values.

Ok
*/
type GetClientsOK struct {
	Payload []*models.Client
}

func (o *GetClientsOK) Error() string {
	return fmt.Sprintf("[GET /client][%d] getClientsOK  %+v", 200, o.Payload)
}

func (o *GetClientsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientsUnauthorized creates a GetClientsUnauthorized with default headers values
func NewGetClientsUnauthorized() *GetClientsUnauthorized {
	return &GetClientsUnauthorized{}
}

/*GetClientsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetClientsUnauthorized struct {
	Payload *models.Error
}

func (o *GetClientsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /client][%d] getClientsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetClientsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientsForbidden creates a GetClientsForbidden with default headers values
func NewGetClientsForbidden() *GetClientsForbidden {
	return &GetClientsForbidden{}
}

/*GetClientsForbidden handles this case with default header values.

Forbidden
*/
type GetClientsForbidden struct {
	Payload *models.Error
}

func (o *GetClientsForbidden) Error() string {
	return fmt.Sprintf("[GET /client][%d] getClientsForbidden  %+v", 403, o.Payload)
}

func (o *GetClientsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
