// Code generated by go-swagger; DO NOT EDIT.

package plugin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gotify/go-api-client/v2/models"
)

// GetPluginConfigReader is a Reader for the GetPluginConfig structure.
type GetPluginConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPluginConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPluginConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetPluginConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetPluginConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetPluginConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPluginConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetPluginConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPluginConfigOK creates a GetPluginConfigOK with default headers values
func NewGetPluginConfigOK() *GetPluginConfigOK {
	return &GetPluginConfigOK{}
}

/*GetPluginConfigOK handles this case with default header values.

Ok
*/
type GetPluginConfigOK struct {
	Payload interface{}
}

func (o *GetPluginConfigOK) Error() string {
	return fmt.Sprintf("[GET /plugin/{id}/config][%d] getPluginConfigOK  %+v", 200, o.Payload)
}

func (o *GetPluginConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginConfigBadRequest creates a GetPluginConfigBadRequest with default headers values
func NewGetPluginConfigBadRequest() *GetPluginConfigBadRequest {
	return &GetPluginConfigBadRequest{}
}

/*GetPluginConfigBadRequest handles this case with default header values.

Bad Request
*/
type GetPluginConfigBadRequest struct {
	Payload *models.Error
}

func (o *GetPluginConfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /plugin/{id}/config][%d] getPluginConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetPluginConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginConfigUnauthorized creates a GetPluginConfigUnauthorized with default headers values
func NewGetPluginConfigUnauthorized() *GetPluginConfigUnauthorized {
	return &GetPluginConfigUnauthorized{}
}

/*GetPluginConfigUnauthorized handles this case with default header values.

Unauthorized
*/
type GetPluginConfigUnauthorized struct {
	Payload *models.Error
}

func (o *GetPluginConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /plugin/{id}/config][%d] getPluginConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPluginConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginConfigForbidden creates a GetPluginConfigForbidden with default headers values
func NewGetPluginConfigForbidden() *GetPluginConfigForbidden {
	return &GetPluginConfigForbidden{}
}

/*GetPluginConfigForbidden handles this case with default header values.

Forbidden
*/
type GetPluginConfigForbidden struct {
	Payload *models.Error
}

func (o *GetPluginConfigForbidden) Error() string {
	return fmt.Sprintf("[GET /plugin/{id}/config][%d] getPluginConfigForbidden  %+v", 403, o.Payload)
}

func (o *GetPluginConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginConfigNotFound creates a GetPluginConfigNotFound with default headers values
func NewGetPluginConfigNotFound() *GetPluginConfigNotFound {
	return &GetPluginConfigNotFound{}
}

/*GetPluginConfigNotFound handles this case with default header values.

Not Found
*/
type GetPluginConfigNotFound struct {
	Payload *models.Error
}

func (o *GetPluginConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /plugin/{id}/config][%d] getPluginConfigNotFound  %+v", 404, o.Payload)
}

func (o *GetPluginConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginConfigInternalServerError creates a GetPluginConfigInternalServerError with default headers values
func NewGetPluginConfigInternalServerError() *GetPluginConfigInternalServerError {
	return &GetPluginConfigInternalServerError{}
}

/*GetPluginConfigInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetPluginConfigInternalServerError struct {
	Payload *models.Error
}

func (o *GetPluginConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /plugin/{id}/config][%d] getPluginConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPluginConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
