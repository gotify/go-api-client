// Code generated by go-swagger; DO NOT EDIT.

package plugin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gotify/go-api-client/v2/models"
)

// GetPluginsReader is a Reader for the GetPlugins structure.
type GetPluginsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPluginsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPluginsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetPluginsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetPluginsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPluginsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetPluginsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPluginsOK creates a GetPluginsOK with default headers values
func NewGetPluginsOK() *GetPluginsOK {
	return &GetPluginsOK{}
}

/*GetPluginsOK handles this case with default header values.

Ok
*/
type GetPluginsOK struct {
	Payload []*models.PluginConfExternal
}

func (o *GetPluginsOK) Error() string {
	return fmt.Sprintf("[GET /plugin][%d] getPluginsOK  %+v", 200, o.Payload)
}

func (o *GetPluginsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginsUnauthorized creates a GetPluginsUnauthorized with default headers values
func NewGetPluginsUnauthorized() *GetPluginsUnauthorized {
	return &GetPluginsUnauthorized{}
}

/*GetPluginsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetPluginsUnauthorized struct {
	Payload *models.Error
}

func (o *GetPluginsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /plugin][%d] getPluginsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPluginsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginsForbidden creates a GetPluginsForbidden with default headers values
func NewGetPluginsForbidden() *GetPluginsForbidden {
	return &GetPluginsForbidden{}
}

/*GetPluginsForbidden handles this case with default header values.

Forbidden
*/
type GetPluginsForbidden struct {
	Payload *models.Error
}

func (o *GetPluginsForbidden) Error() string {
	return fmt.Sprintf("[GET /plugin][%d] getPluginsForbidden  %+v", 403, o.Payload)
}

func (o *GetPluginsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginsNotFound creates a GetPluginsNotFound with default headers values
func NewGetPluginsNotFound() *GetPluginsNotFound {
	return &GetPluginsNotFound{}
}

/*GetPluginsNotFound handles this case with default header values.

Not Found
*/
type GetPluginsNotFound struct {
	Payload *models.Error
}

func (o *GetPluginsNotFound) Error() string {
	return fmt.Sprintf("[GET /plugin][%d] getPluginsNotFound  %+v", 404, o.Payload)
}

func (o *GetPluginsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginsInternalServerError creates a GetPluginsInternalServerError with default headers values
func NewGetPluginsInternalServerError() *GetPluginsInternalServerError {
	return &GetPluginsInternalServerError{}
}

/*GetPluginsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetPluginsInternalServerError struct {
	Payload *models.Error
}

func (o *GetPluginsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /plugin][%d] getPluginsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPluginsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
