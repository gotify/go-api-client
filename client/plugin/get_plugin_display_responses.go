// Code generated by go-swagger; DO NOT EDIT.

package plugin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gotify/go-api-client/v2/models"
)

// GetPluginDisplayReader is a Reader for the GetPluginDisplay structure.
type GetPluginDisplayReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPluginDisplayReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPluginDisplayOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetPluginDisplayUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetPluginDisplayForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPluginDisplayNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetPluginDisplayInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPluginDisplayOK creates a GetPluginDisplayOK with default headers values
func NewGetPluginDisplayOK() *GetPluginDisplayOK {
	return &GetPluginDisplayOK{}
}

/*GetPluginDisplayOK handles this case with default header values.

Ok
*/
type GetPluginDisplayOK struct {
	Payload string
}

func (o *GetPluginDisplayOK) Error() string {
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayOK  %+v", 200, o.Payload)
}

func (o *GetPluginDisplayOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginDisplayUnauthorized creates a GetPluginDisplayUnauthorized with default headers values
func NewGetPluginDisplayUnauthorized() *GetPluginDisplayUnauthorized {
	return &GetPluginDisplayUnauthorized{}
}

/*GetPluginDisplayUnauthorized handles this case with default header values.

Unauthorized
*/
type GetPluginDisplayUnauthorized struct {
	Payload *models.Error
}

func (o *GetPluginDisplayUnauthorized) Error() string {
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPluginDisplayUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginDisplayForbidden creates a GetPluginDisplayForbidden with default headers values
func NewGetPluginDisplayForbidden() *GetPluginDisplayForbidden {
	return &GetPluginDisplayForbidden{}
}

/*GetPluginDisplayForbidden handles this case with default header values.

Forbidden
*/
type GetPluginDisplayForbidden struct {
	Payload *models.Error
}

func (o *GetPluginDisplayForbidden) Error() string {
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayForbidden  %+v", 403, o.Payload)
}

func (o *GetPluginDisplayForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginDisplayNotFound creates a GetPluginDisplayNotFound with default headers values
func NewGetPluginDisplayNotFound() *GetPluginDisplayNotFound {
	return &GetPluginDisplayNotFound{}
}

/*GetPluginDisplayNotFound handles this case with default header values.

Not Found
*/
type GetPluginDisplayNotFound struct {
	Payload *models.Error
}

func (o *GetPluginDisplayNotFound) Error() string {
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayNotFound  %+v", 404, o.Payload)
}

func (o *GetPluginDisplayNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginDisplayInternalServerError creates a GetPluginDisplayInternalServerError with default headers values
func NewGetPluginDisplayInternalServerError() *GetPluginDisplayInternalServerError {
	return &GetPluginDisplayInternalServerError{}
}

/*GetPluginDisplayInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetPluginDisplayInternalServerError struct {
	Payload *models.Error
}

func (o *GetPluginDisplayInternalServerError) Error() string {
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPluginDisplayInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
