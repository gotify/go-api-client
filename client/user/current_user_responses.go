// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/gotify/go-api-client/v2/models"
)

// CurrentUserReader is a Reader for the CurrentUser structure.
type CurrentUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CurrentUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCurrentUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewCurrentUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCurrentUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCurrentUserOK creates a CurrentUserOK with default headers values
func NewCurrentUserOK() *CurrentUserOK {
	return &CurrentUserOK{}
}

/*CurrentUserOK handles this case with default header values.

Ok
*/
type CurrentUserOK struct {
	Payload *models.UserExternal
}

func (o *CurrentUserOK) Error() string {
	return fmt.Sprintf("[GET /current/user][%d] currentUserOK  %+v", 200, o.Payload)
}

func (o *CurrentUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserExternal)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCurrentUserUnauthorized creates a CurrentUserUnauthorized with default headers values
func NewCurrentUserUnauthorized() *CurrentUserUnauthorized {
	return &CurrentUserUnauthorized{}
}

/*CurrentUserUnauthorized handles this case with default header values.

Unauthorized
*/
type CurrentUserUnauthorized struct {
	Payload *models.Error
}

func (o *CurrentUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /current/user][%d] currentUserUnauthorized  %+v", 401, o.Payload)
}

func (o *CurrentUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCurrentUserForbidden creates a CurrentUserForbidden with default headers values
func NewCurrentUserForbidden() *CurrentUserForbidden {
	return &CurrentUserForbidden{}
}

/*CurrentUserForbidden handles this case with default header values.

Forbidden
*/
type CurrentUserForbidden struct {
	Payload *models.Error
}

func (o *CurrentUserForbidden) Error() string {
	return fmt.Sprintf("[GET /current/user][%d] currentUserForbidden  %+v", 403, o.Payload)
}

func (o *CurrentUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
